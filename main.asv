close all;
clear
datestr(now)
addpath('./libchannel');
filepath='C:\Users\wu\Desktop\Thesixth semester\mimo\3DVSource\3Dtest\3DV测试序列\';
ind=[1 3 5];
FrameHeight = 1024;
FrameWidth = 768;
TotalFrameNum = 8;
GOP = 8;
NumOfGop = TotalFrameNum/GOP;
SNR = [-5 0 5 10 15 20 25];
psnr = zeros(NumOfGop, numel(SNR));
BandwidthRatio = 1;
BlockNum = 64;
%%
imginfo.H       = FrameHeight;
imginfo.W       = FrameWidth;
imginfo.bh = FrameHeight/8;
imginfo.bw = FrameWidth/8;
imginfo.cH      = imginfo.H / 2;
imginfo.cW      = imginfo.W / 2;
imginfo.Ysz     = imginfo.H * imginfo.W;
imginfo.Usz     = imginfo.cH * imginfo.cW;
imginfo.Vsz     = imginfo.cH * imginfo.cW;
%%
Tx_line = [];
currentBlock_complex=[];
for ii=1:2
    fid = fopen([filepath 'balloons' num2str(ind(ii)) '.yuv'],'rb');
    for indGOP = 1:NumOfGop
        Pics    = fx_LoadNFrm (fid, imginfo, GOP);
        C       = DCT3(Pics - 128);
        [enc,lambda,g]  =fx_enc_wj(C,imginfo);
     %% zigag   
        for jj=1:size(enc,1)
            warp_temp=reshape(enc(jj,:),imginfo.bh,imginfo.bw);
            warp_temp_zig=zigzag(warp_temp);
            warp_temp_comp=warp_temp_zig(1:2:end)+warp_temp_zig(2:2:end)*1i;
            currentBlock_complex=[currentBlock_complex reshape(warp_temp_comp,1,[])];
        end
        %% two user alamounti stbc
        Tx_line=[Tx_line;currentBlock_complex(1:2:end);currentBlock_complex(2:2:end)];     
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for indCoherent=1
	for ii = 1:numel(SNR)
        EsN0dB = SNR(ii);
       %% MIMO simulation
        fx_MIMOchannelReset(indCoherent);
        [Yc, Hc, N0] = fx_MIMO_Nt2(X, cfg.Tc, EsN0dB, 2);
	end
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[DC(2),enc_imgref_warp,lambda_imgref_warp,g_imgref_warp,x_warp]=fx_enc_wj(Y_all{1});
[DC(1),enc_img2,lambda_img2,g_img2,x2]=fx_enc_wj(Y_all{2});
meta.lambda=[lambda_imgref_warp;lambda_img2];
meta.g=[g_imgref_warp;g_img2];
%% zigag
enc_imgref_warp_complex= [];
enc_img2_complex= [];
for ii=1:64
    warp_temp=reshape(enc_imgref_warp(ii,:),cfg.imginfo.cH,cfg.imginfo.cW);
    warp_temp_zig=zigzag(warp_temp);
    warp_temp_comp=warp_temp_zig(1:2:end)+warp_temp_zig(2:2:end)*1i;
    enc_imgref_warp_complex=[enc_imgref_warp_complex reshape(warp_temp_comp,1,[])];
    
    img2_temp=reshape(enc_img2(ii,:),cfg.imginfo.cH,cfg.imginfo.cW);
    img2_temp_zig=zigzag(img2_temp);
    img2_temp_comp=img2_temp_zig(1:2:end)+img2_temp_zig(2:2:end)*1i;
    enc_img2_complex=[enc_img2_complex reshape(img2_temp_comp,1,[])];
%***************for test ******************%
%     test_warp=enc_imgref_warp(ii,:);
%     test2=enc_img2(ii,:);
%     figure;stem(test_warp(1:200),'-r+');hold on; stem(test2(1:200),'-b*');
end
%% two user alamounti stbc
line1 = enc_imgref_warp_complex(1:2:end);
line2 = enc_imgref_warp_complex(2:2:end);
line3 = enc_img2_complex(1:2:end);
line4 = enc_img2_complex(2:2:end);
% stbc
T0 = eye(2);
T1 = [-1 0; 0 1];
X = [ T0*    [line1;line4]; ...
                       T1*  [conj(line2);conj(line3)] ];% 保证平均信号功率为1

%% channel/+
psnr_imgref_warp=[];
psnr_img2=[];
Nsnr = numel(cfg.SNR);
for indCoherent=1
	for indSNR = 1:7
        EsN0dB = cfg.SNR(indSNR);
       %% MIMO simulation
        fx_MIMOchannelReset(indCoherent);
        [Yc, Hc, N0] = fx_MIMO_Nt2(X, cfg.Tc, EsN0dB, 2);
    %     Y_test=pinv(blkdiag(Hc{1}, Hc{1}))*Yc{1};
        meta.N0=N0;
        meta.channelsnr =  EsN0dB;
%% stbc decoder
        Xr = fx_DecNs2(Yc, Hc, meta);
        Xr(1,1)=DC(2);
        Xr(5,1)=DC(1);
       %% image reconstruction
        bh=height/8;
        bw=width/8;
        rxLuma = fx_rec_SC_nt2(Xr,bh,bw,meta);
       %% calculate psnr   
        MSE_imgref_warp = reshape(mean(mean((rxLuma - img{3}).^2, 1), 2), 1, 1);
    	psnr_imgref_warp = [psnr_imgref_warp 10*log10(255^2 ./ MSE_imgref_warp)]; 
	end
end
imshow(rxLuma,[]);
disp(psnr_imgref_warp);
       
       
       

